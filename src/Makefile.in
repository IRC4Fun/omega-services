CC		    = @CC@

INSTALL		= @INSTALL@
INSTALL_BIN	= @INSTALL_PROGRAM@

prefix	    = @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
RM		    = @RM@

CFLAGS		= -pipe -O0 -fPIC -g -ggdb @CFLAGS@ -I../include
LDFLAGS		= @LDFLAGS@
LIBS		= @LIBS@

default: all
all: security
build: all

SUBDIRS = socketengine

SRCS  =                 \
  core.c                \
  config.c              \
  configparser.c        \
  dlink.c               \
  server.c              \
  modque.c              \
  main.c                \
  database.c            \
  module.c              \
  tools.c               \
  event.c               \
  logger.c              \
  socketengine.c        \
  sendto.c              \
  sighandler.c          \
  socket.c              \
  uplink.c              \
  parser.c              \
  command.c             \
  thread.c

OBJS = ${SRCS:.c=.o}

security: run_subdirs $(OBJS)
	@${CC} ${CFLAGS} ${LDFLAGS} -o $@ ${OBJS} ${LIBS} ${MYSQL}
	@echo "[LD] $@"

run_subdirs:
	@for i in $(SUBDIRS); do \
		echo "build ==> src/$$i"; \
		cd   $$i; \
		${MAKE} build || exit 1; cd   ..; \
	done
  
install: install-mkdir
	@for i in $(SUBDIRS); do \
		echo "install ==> src/$$i"; \
		cd   $$i; \
		${MAKE} install || exit 1; cd   ..; \
	done
	@$(INSTALL_BIN) security $(DESTDIR)$(bindir)

install-mkdir:

clean:
	@for i in $(SUBDIRS); do \
		echo "build ==> src/$$i"; \
		cd   $$i; \
		${MAKE} clean || exit 1; cd   ..; \
	done
	@${RM} -f *.o security *~ security.core *.core

header-guard:
	@${RM} -f *.h


distclean: clean
	@${RM} -f Makefile

.c.o:
	@echo "[CC] $<"
	@${CC} ${CPPFLAGS} ${CFLAGS} -c $<

